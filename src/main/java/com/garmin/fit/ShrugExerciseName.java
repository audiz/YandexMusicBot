////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Garmin Canada Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2021 Garmin Canada Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.53Release
// Tag = production/akw/21.53.00-0-g1b82aa2b
////////////////////////////////////////////////////////////////////////////////


package com.garmin.fit;

import java.util.HashMap;
import java.util.Map;

public class ShrugExerciseName  {
    public static final int BARBELL_JUMP_SHRUG = 0;
    public static final int BARBELL_SHRUG = 1;
    public static final int BARBELL_UPRIGHT_ROW = 2;
    public static final int BEHIND_THE_BACK_SMITH_MACHINE_SHRUG = 3;
    public static final int DUMBBELL_JUMP_SHRUG = 4;
    public static final int DUMBBELL_SHRUG = 5;
    public static final int DUMBBELL_UPRIGHT_ROW = 6;
    public static final int INCLINE_DUMBBELL_SHRUG = 7;
    public static final int OVERHEAD_BARBELL_SHRUG = 8;
    public static final int OVERHEAD_DUMBBELL_SHRUG = 9;
    public static final int SCAPTION_AND_SHRUG = 10;
    public static final int SCAPULAR_RETRACTION = 11;
    public static final int SERRATUS_CHAIR_SHRUG = 12;
    public static final int WEIGHTED_SERRATUS_CHAIR_SHRUG = 13;
    public static final int SERRATUS_SHRUG = 14;
    public static final int WEIGHTED_SERRATUS_SHRUG = 15;
    public static final int WIDE_GRIP_JUMP_SHRUG = 16;
    public static final int INVALID = Fit.UINT16_INVALID;

    private static final Map<Integer, String> stringMap;

    static {
        stringMap = new HashMap<Integer, String>();
        stringMap.put(BARBELL_JUMP_SHRUG, "BARBELL_JUMP_SHRUG");
        stringMap.put(BARBELL_SHRUG, "BARBELL_SHRUG");
        stringMap.put(BARBELL_UPRIGHT_ROW, "BARBELL_UPRIGHT_ROW");
        stringMap.put(BEHIND_THE_BACK_SMITH_MACHINE_SHRUG, "BEHIND_THE_BACK_SMITH_MACHINE_SHRUG");
        stringMap.put(DUMBBELL_JUMP_SHRUG, "DUMBBELL_JUMP_SHRUG");
        stringMap.put(DUMBBELL_SHRUG, "DUMBBELL_SHRUG");
        stringMap.put(DUMBBELL_UPRIGHT_ROW, "DUMBBELL_UPRIGHT_ROW");
        stringMap.put(INCLINE_DUMBBELL_SHRUG, "INCLINE_DUMBBELL_SHRUG");
        stringMap.put(OVERHEAD_BARBELL_SHRUG, "OVERHEAD_BARBELL_SHRUG");
        stringMap.put(OVERHEAD_DUMBBELL_SHRUG, "OVERHEAD_DUMBBELL_SHRUG");
        stringMap.put(SCAPTION_AND_SHRUG, "SCAPTION_AND_SHRUG");
        stringMap.put(SCAPULAR_RETRACTION, "SCAPULAR_RETRACTION");
        stringMap.put(SERRATUS_CHAIR_SHRUG, "SERRATUS_CHAIR_SHRUG");
        stringMap.put(WEIGHTED_SERRATUS_CHAIR_SHRUG, "WEIGHTED_SERRATUS_CHAIR_SHRUG");
        stringMap.put(SERRATUS_SHRUG, "SERRATUS_SHRUG");
        stringMap.put(WEIGHTED_SERRATUS_SHRUG, "WEIGHTED_SERRATUS_SHRUG");
        stringMap.put(WIDE_GRIP_JUMP_SHRUG, "WIDE_GRIP_JUMP_SHRUG");
    }


    /**
     * Retrieves the String Representation of the Value
     * @return The string representation of the value, or empty if unknown
     */
    public static String getStringFromValue( Integer value ) {
        if( stringMap.containsKey( value ) ) {
            return stringMap.get( value );
        }

        return "";
    }

    /**
     * Retrieves a value given a string representation
     * @return The value or INVALID if unkwown
     */
    public static Integer getValueFromString( String value ) {
        for( Map.Entry<Integer, String> entry : stringMap.entrySet() ) {
            if( entry.getValue().equals( value ) ) {
                return entry.getKey();
            }
        }

        return INVALID;
    }

}
