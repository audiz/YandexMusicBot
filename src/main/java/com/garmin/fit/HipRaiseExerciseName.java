////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Garmin Canada Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2021 Garmin Canada Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.53Release
// Tag = production/akw/21.53.00-0-g1b82aa2b
////////////////////////////////////////////////////////////////////////////////


package com.garmin.fit;

import java.util.HashMap;
import java.util.Map;

public class HipRaiseExerciseName  {
    public static final int BARBELL_HIP_THRUST_ON_FLOOR = 0;
    public static final int BARBELL_HIP_THRUST_WITH_BENCH = 1;
    public static final int BENT_KNEE_SWISS_BALL_REVERSE_HIP_RAISE = 2;
    public static final int WEIGHTED_BENT_KNEE_SWISS_BALL_REVERSE_HIP_RAISE = 3;
    public static final int BRIDGE_WITH_LEG_EXTENSION = 4;
    public static final int WEIGHTED_BRIDGE_WITH_LEG_EXTENSION = 5;
    public static final int CLAM_BRIDGE = 6;
    public static final int FRONT_KICK_TABLETOP = 7;
    public static final int WEIGHTED_FRONT_KICK_TABLETOP = 8;
    public static final int HIP_EXTENSION_AND_CROSS = 9;
    public static final int WEIGHTED_HIP_EXTENSION_AND_CROSS = 10;
    public static final int HIP_RAISE = 11;
    public static final int WEIGHTED_HIP_RAISE = 12;
    public static final int HIP_RAISE_WITH_FEET_ON_SWISS_BALL = 13;
    public static final int WEIGHTED_HIP_RAISE_WITH_FEET_ON_SWISS_BALL = 14;
    public static final int HIP_RAISE_WITH_HEAD_ON_BOSU_BALL = 15;
    public static final int WEIGHTED_HIP_RAISE_WITH_HEAD_ON_BOSU_BALL = 16;
    public static final int HIP_RAISE_WITH_HEAD_ON_SWISS_BALL = 17;
    public static final int WEIGHTED_HIP_RAISE_WITH_HEAD_ON_SWISS_BALL = 18;
    public static final int HIP_RAISE_WITH_KNEE_SQUEEZE = 19;
    public static final int WEIGHTED_HIP_RAISE_WITH_KNEE_SQUEEZE = 20;
    public static final int INCLINE_REAR_LEG_EXTENSION = 21;
    public static final int WEIGHTED_INCLINE_REAR_LEG_EXTENSION = 22;
    public static final int KETTLEBELL_SWING = 23;
    public static final int MARCHING_HIP_RAISE = 24;
    public static final int WEIGHTED_MARCHING_HIP_RAISE = 25;
    public static final int MARCHING_HIP_RAISE_WITH_FEET_ON_A_SWISS_BALL = 26;
    public static final int WEIGHTED_MARCHING_HIP_RAISE_WITH_FEET_ON_A_SWISS_BALL = 27;
    public static final int REVERSE_HIP_RAISE = 28;
    public static final int WEIGHTED_REVERSE_HIP_RAISE = 29;
    public static final int SINGLE_LEG_HIP_RAISE = 30;
    public static final int WEIGHTED_SINGLE_LEG_HIP_RAISE = 31;
    public static final int SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_BENCH = 32;
    public static final int WEIGHTED_SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_BENCH = 33;
    public static final int SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_BOSU_BALL = 34;
    public static final int WEIGHTED_SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_BOSU_BALL = 35;
    public static final int SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_FOAM_ROLLER = 36;
    public static final int WEIGHTED_SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_FOAM_ROLLER = 37;
    public static final int SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_MEDICINE_BALL = 38;
    public static final int WEIGHTED_SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_MEDICINE_BALL = 39;
    public static final int SINGLE_LEG_HIP_RAISE_WITH_HEAD_ON_BOSU_BALL = 40;
    public static final int WEIGHTED_SINGLE_LEG_HIP_RAISE_WITH_HEAD_ON_BOSU_BALL = 41;
    public static final int WEIGHTED_CLAM_BRIDGE = 42;
    public static final int SINGLE_LEG_SWISS_BALL_HIP_RAISE_AND_LEG_CURL = 43;
    public static final int CLAMS = 44;
    public static final int INNER_THIGH_CIRCLES = 45; // Deprecated do not use
    public static final int INNER_THIGH_SIDE_LIFT = 46; // Deprecated do not use
    public static final int LEG_CIRCLES = 47;
    public static final int LEG_LIFT = 48;
    public static final int LEG_LIFT_IN_EXTERNAL_ROTATION = 49;
    public static final int INVALID = Fit.UINT16_INVALID;

    private static final Map<Integer, String> stringMap;

    static {
        stringMap = new HashMap<Integer, String>();
        stringMap.put(BARBELL_HIP_THRUST_ON_FLOOR, "BARBELL_HIP_THRUST_ON_FLOOR");
        stringMap.put(BARBELL_HIP_THRUST_WITH_BENCH, "BARBELL_HIP_THRUST_WITH_BENCH");
        stringMap.put(BENT_KNEE_SWISS_BALL_REVERSE_HIP_RAISE, "BENT_KNEE_SWISS_BALL_REVERSE_HIP_RAISE");
        stringMap.put(WEIGHTED_BENT_KNEE_SWISS_BALL_REVERSE_HIP_RAISE, "WEIGHTED_BENT_KNEE_SWISS_BALL_REVERSE_HIP_RAISE");
        stringMap.put(BRIDGE_WITH_LEG_EXTENSION, "BRIDGE_WITH_LEG_EXTENSION");
        stringMap.put(WEIGHTED_BRIDGE_WITH_LEG_EXTENSION, "WEIGHTED_BRIDGE_WITH_LEG_EXTENSION");
        stringMap.put(CLAM_BRIDGE, "CLAM_BRIDGE");
        stringMap.put(FRONT_KICK_TABLETOP, "FRONT_KICK_TABLETOP");
        stringMap.put(WEIGHTED_FRONT_KICK_TABLETOP, "WEIGHTED_FRONT_KICK_TABLETOP");
        stringMap.put(HIP_EXTENSION_AND_CROSS, "HIP_EXTENSION_AND_CROSS");
        stringMap.put(WEIGHTED_HIP_EXTENSION_AND_CROSS, "WEIGHTED_HIP_EXTENSION_AND_CROSS");
        stringMap.put(HIP_RAISE, "HIP_RAISE");
        stringMap.put(WEIGHTED_HIP_RAISE, "WEIGHTED_HIP_RAISE");
        stringMap.put(HIP_RAISE_WITH_FEET_ON_SWISS_BALL, "HIP_RAISE_WITH_FEET_ON_SWISS_BALL");
        stringMap.put(WEIGHTED_HIP_RAISE_WITH_FEET_ON_SWISS_BALL, "WEIGHTED_HIP_RAISE_WITH_FEET_ON_SWISS_BALL");
        stringMap.put(HIP_RAISE_WITH_HEAD_ON_BOSU_BALL, "HIP_RAISE_WITH_HEAD_ON_BOSU_BALL");
        stringMap.put(WEIGHTED_HIP_RAISE_WITH_HEAD_ON_BOSU_BALL, "WEIGHTED_HIP_RAISE_WITH_HEAD_ON_BOSU_BALL");
        stringMap.put(HIP_RAISE_WITH_HEAD_ON_SWISS_BALL, "HIP_RAISE_WITH_HEAD_ON_SWISS_BALL");
        stringMap.put(WEIGHTED_HIP_RAISE_WITH_HEAD_ON_SWISS_BALL, "WEIGHTED_HIP_RAISE_WITH_HEAD_ON_SWISS_BALL");
        stringMap.put(HIP_RAISE_WITH_KNEE_SQUEEZE, "HIP_RAISE_WITH_KNEE_SQUEEZE");
        stringMap.put(WEIGHTED_HIP_RAISE_WITH_KNEE_SQUEEZE, "WEIGHTED_HIP_RAISE_WITH_KNEE_SQUEEZE");
        stringMap.put(INCLINE_REAR_LEG_EXTENSION, "INCLINE_REAR_LEG_EXTENSION");
        stringMap.put(WEIGHTED_INCLINE_REAR_LEG_EXTENSION, "WEIGHTED_INCLINE_REAR_LEG_EXTENSION");
        stringMap.put(KETTLEBELL_SWING, "KETTLEBELL_SWING");
        stringMap.put(MARCHING_HIP_RAISE, "MARCHING_HIP_RAISE");
        stringMap.put(WEIGHTED_MARCHING_HIP_RAISE, "WEIGHTED_MARCHING_HIP_RAISE");
        stringMap.put(MARCHING_HIP_RAISE_WITH_FEET_ON_A_SWISS_BALL, "MARCHING_HIP_RAISE_WITH_FEET_ON_A_SWISS_BALL");
        stringMap.put(WEIGHTED_MARCHING_HIP_RAISE_WITH_FEET_ON_A_SWISS_BALL, "WEIGHTED_MARCHING_HIP_RAISE_WITH_FEET_ON_A_SWISS_BALL");
        stringMap.put(REVERSE_HIP_RAISE, "REVERSE_HIP_RAISE");
        stringMap.put(WEIGHTED_REVERSE_HIP_RAISE, "WEIGHTED_REVERSE_HIP_RAISE");
        stringMap.put(SINGLE_LEG_HIP_RAISE, "SINGLE_LEG_HIP_RAISE");
        stringMap.put(WEIGHTED_SINGLE_LEG_HIP_RAISE, "WEIGHTED_SINGLE_LEG_HIP_RAISE");
        stringMap.put(SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_BENCH, "SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_BENCH");
        stringMap.put(WEIGHTED_SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_BENCH, "WEIGHTED_SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_BENCH");
        stringMap.put(SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_BOSU_BALL, "SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_BOSU_BALL");
        stringMap.put(WEIGHTED_SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_BOSU_BALL, "WEIGHTED_SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_BOSU_BALL");
        stringMap.put(SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_FOAM_ROLLER, "SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_FOAM_ROLLER");
        stringMap.put(WEIGHTED_SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_FOAM_ROLLER, "WEIGHTED_SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_FOAM_ROLLER");
        stringMap.put(SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_MEDICINE_BALL, "SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_MEDICINE_BALL");
        stringMap.put(WEIGHTED_SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_MEDICINE_BALL, "WEIGHTED_SINGLE_LEG_HIP_RAISE_WITH_FOOT_ON_MEDICINE_BALL");
        stringMap.put(SINGLE_LEG_HIP_RAISE_WITH_HEAD_ON_BOSU_BALL, "SINGLE_LEG_HIP_RAISE_WITH_HEAD_ON_BOSU_BALL");
        stringMap.put(WEIGHTED_SINGLE_LEG_HIP_RAISE_WITH_HEAD_ON_BOSU_BALL, "WEIGHTED_SINGLE_LEG_HIP_RAISE_WITH_HEAD_ON_BOSU_BALL");
        stringMap.put(WEIGHTED_CLAM_BRIDGE, "WEIGHTED_CLAM_BRIDGE");
        stringMap.put(SINGLE_LEG_SWISS_BALL_HIP_RAISE_AND_LEG_CURL, "SINGLE_LEG_SWISS_BALL_HIP_RAISE_AND_LEG_CURL");
        stringMap.put(CLAMS, "CLAMS");
        stringMap.put(INNER_THIGH_CIRCLES, "INNER_THIGH_CIRCLES");
        stringMap.put(INNER_THIGH_SIDE_LIFT, "INNER_THIGH_SIDE_LIFT");
        stringMap.put(LEG_CIRCLES, "LEG_CIRCLES");
        stringMap.put(LEG_LIFT, "LEG_LIFT");
        stringMap.put(LEG_LIFT_IN_EXTERNAL_ROTATION, "LEG_LIFT_IN_EXTERNAL_ROTATION");
    }


    /**
     * Retrieves the String Representation of the Value
     * @return The string representation of the value, or empty if unknown
     */
    public static String getStringFromValue( Integer value ) {
        if( stringMap.containsKey( value ) ) {
            return stringMap.get( value );
        }

        return "";
    }

    /**
     * Retrieves a value given a string representation
     * @return The value or INVALID if unkwown
     */
    public static Integer getValueFromString( String value ) {
        for( Map.Entry<Integer, String> entry : stringMap.entrySet() ) {
            if( entry.getValue().equals( value ) ) {
                return entry.getKey();
            }
        }

        return INVALID;
    }

}
